<launch>
  <param name="robot_description"
         command="$(find xacro)/xacro.py '$(find life_test)/caster_life_test/caster.urdf.xacro'" />

  <param name="mechanism_state_publish_rate" type="double" value="100" />
  <node machine="test_host_root" pkg="pr2_etherCAT" type="pr2_etherCAT"
        args="-i eth0 -x robot_description" name="pr2_etherCAT" >
  </node>
  <node pkg="pr2_controller_manager" type="joints_to_diagnostics.py"
        name="joint_to_diag" machine="test_host" />

  <!-- Calibration and velocity controllers -->
  <rosparam command="load" file="$(find pr2_default_controllers)/pr2_calibration_controllers.yaml" />
  <node pkg="mechanism_bringup" type="calibrate.py"
        args="cal_caster_fl" name="cal_caster" output="screen" />
  <!--
      <node pkg="mechanism_bringup" type="calibrate.py"
            args="cal_caster_bl_alpha2" name="cal_caster" output="screen" />
      -->
  
  <!-- Controller, velocity controller -->
  <rosparam command="load" file="$(find life_test)/caster_life_test/caster_controllers.yaml" />
  <node pkg="pr2_controller_manager" type="spawner.py"
        args="caster_fl" name="$(anon caster_spawner)" />

  <!-- Commander -->
  <node pkg="life_test" type="caster_cmder.py"
        name="caster_cmder" machine="test_host"/>

  <!-- Monitor (with transmission) -->
  <node pkg="life_test" type="test_monitor.py"
        name="monitor" machine="test_host" >
    <rosparam command="load"
              file="$(find life_test)/caster_life_test/caster_listeners.yaml" />
  </node>

</launch>
