<launch>
  <!-- load planning_environment, disable use collision map -->
  <include file="$(find planning_environment)/launch/environment_server_right_arm.launch"/>
  <param name="right_arm_environment_server/use_collision_map" type="bool" value="false" />
  
  <node pkg="trajectory_filter" name="trajectory_filter" type="trajectory_filter_node" output="screen">
    <rosparam command="load" file="$(find collision_free_arm_trajectory_controller)/config/filters.yaml"/>
    <rosparam command="load" file="$(find life_test)/shoulder_ua_test/joint_limits.yaml"/>
  </node>

  <node pkg="collision_free_arm_trajectory_controller" name="collision_free_arm_trajectory_controller" type="collision_free_arm_trajectory_controller" output="screen">
    <param name="traj_action_name" type="string" value="r_arm_controller/joint_trajectory_action" />
    <param name="group_name" type="string" value="right_arm" />
    <remap from="filter_trajectory" to="trajectory_filter/filter_trajectory" />	
  </node>

  <rosparam command="load" file="$(find life_test)/shoulder_ua_test/pr2_shoulder_ua_controller.yaml" />

  <node name="default_controllers_spawner"
        pkg="pr2_controller_manager" type="spawner" output="screen"
        args="--wait-for=calibrated r_arm_controller" />

  <!-- Nodes on top of the controllers -->
  <group ns="r_arm_controller">
    <node name="joint_trajectory_action_node"  
          pkg="joint_trajectory_action" type="joint_trajectory_action" />
  </group>

  <node pkg="life_test" type="collision_free_arm_cmder.py" name="arm_cmder" />

  <!-- FA roll cmder -->
  <rosparam command="load"
            file="$(find pr2_controller_configuration)/pr2_joint_effort_controllers.yaml" />
  <node pkg="pr2_controller_manager" type="spawner"
        args="--wait-for=calibrated r_forearm_roll_effort_controller"
        name="fa_roll_spawner)" />
  <node pkg="life_test" name="upperarm_cmder" type="upperarm_cmder.py" />
</launch>
