<launch>
  <!-- start gazebo with an empty plane -->
  <param name="/use_sim_time" value="true" />

  <!-- Runs without gazebo window -->
  <node name="gazebo" pkg="gazebo" type="gazebo" args="$(find gazebo_worlds)/worlds/empty.world -r" respawn="false" >
    <env name="LD_LIBRARY_PATH" value="$(find pr2_gazebo_plugins)/lib:$(find gazebo)/gazebo/lib:$(optenv LD_LIBRARY_PATH)" />
    <env name="GAZEBO_RESOURCE_PATH" value="$(find pr2_ogre):$(find pr2_defs):$(find pr2_description):$(find gazebo_worlds):$(find gazebo)/gazebo/share/gazebo" />
    <env name="OGRE_RESOURCE_PATH" value="$(find ogre)/ogre/lib/OGRE" />
  </node>

  <!-- Load PR2 URDF -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find pr2_description)/robots/pr2.urdf.xacro'" />
  <node pkg="gazebo_tools" type="gazebo_model" name="spawn_pr2"
        args="-p robot_description spawn" respawn="false"  />

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="state_publisher"
        name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>
  
  <!-- Publishes diagnostics for checkout script -->
  <node pkg="pr2_controller_manager" type="joints_to_diagnostics.py" name="joint_diag" />
  <node pkg="pr2_controller_manager" type="controllers_to_diagnostics.py" name="control_diag" />
</launch>
